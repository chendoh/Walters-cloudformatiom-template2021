{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Metadata": {

    },
    "Parameters": {
      "wnvpccidr": {
          "Description": "provide vpc cidr",
          "Type": "String"
          

    },
    "wnsnprivatecidr"{
      "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "This template provisions the network and web proxy infrastructure for the Ovid Application",
        "Metadata": {
        },
        "Parameters": {
          "jjtechvpcCIDR": {
              "Description": "vpc CidrBlock",
              "Type": "String"
          },
          "jjtechPubSNcidr": {
              "Description": "cidr of your public subnet",
              "Type": "String"
          },
          "jjtechPrvtSNcidr": {
              "Description": "cidr of your private subnet",
              "Type": "String"
          },
          "jjtechPublicSubnetAZ": {
              "Description": "AZ for public SN ",
              "Type": "AWS::EC2::AvailabilityZone::Name"
          },
          "jjtechPrvtSnAZ": {
              "Description": "AZ for private SN ",
              "Type": "AWS::EC2::AvailabilityZone::Name"
          },
          "jjtechPubRTrouteDestinationCidrBlock": {
              "Description": "Provide DestinationCidrBlock",
              "Type": "String"
            },
            "jjtechInstanceType": {
                "Description": "select instance type from the list of allowed value",
                "Type": "String",
                "AllowedValues": [
                  "t1.micro",
                  "t2.medium",
                  "t2.micro",
                  "t2.nano",
                  "t2.small",
                  "t2.xlarge"
                ]
            },
            "jjtechWebServerSGingressFromPortForHTTP": {
                "Description": "provides http from Number",
                "Type": "String",
                "Default": "80"
          },
          "jjtechWebServerSGingressToPortForHTTP": {
              "Description": "provides http to port number",
              "Type": "String",
              "Default": "80"
          },
          "jjtechWebServerSGsourceIPforHTTP": {
              "Description": "Provide Source IP for jjtechWebServerSG Ingress Rules",
              "Type": "String",
              "Default": "0.0.0.0/0"
          },
          "jjtechKeyPair": {
              "Description": "Provide KeyPair Name for WebServer",
              "Type": "AWS::EC2::KeyPair::KeyName"
          },
          "jjtechAMI": {
              "Description": "Provide AMI for your instance",
              "Type": "String",
              "Default": "ami-0742b4e673072066f"
          }
    
        },
        "Mappings": {
        },
        "Conditions": {
        },
        "Resources": {
          "jjtechVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": { "Ref": "jjtechvpcCIDR" },
              "Tags": [{ "Key": "Name", "Value":  "jjtechVPC" }]
            }
          },
          "jjtechIGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
              "Tags": [{ "Key": "Name", "Value":  "jjtechIGW" }]
            }
          },
          "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
              "VpcId": { "Ref": "jjtechVPC" },
              "InternetGatewayId": { "Ref": "jjtechIGW" }
            }
          },
          "jjtechPubSN": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": { "Ref": "jjtechPublicSubnetAZ" },
              "VpcId": { "Ref": "jjtechVPC" },
              "CidrBlock": { "Ref": "jjtechPubSNcidr" },
              "Tags": [{ "Key": "Name", "Value":  "jjtechPubSN" }]
            }
          },
          "jjtechPrvtSN": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": { "Ref": "jjtechPrvtSnAZ" },
              "VpcId": { "Ref": "jjtechVPC" },
              "CidrBlock": { "Ref": "jjtechPrvtSNcidr" },
              "Tags": [{ "Key": "Name", "Value":  "jjtechPrvtSN" }]
            }
          },
          "jjtechPrvtRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": { "Ref": "jjtechVPC" },
              "Tags": [{ "Key": "Name", "Value":  "jjtechPrvtRT" }]
            }
          },
          "jjtechPubRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": { "Ref": "jjtechVPC" },
              "Tags": [{ "Key": "Name", "Value":  "jjtechPubRT" }]
            }
          },
          "jjtechPrvtRTAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "SubnetId": { "Ref": "jjtechPrvtSN" },
              "RouteTableId": { "Ref": "jjtechPrvtRT" }
            }
          },
          "jjtechPubRTAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "SubnetId": { "Ref": "jjtechPubSN" },
              "RouteTableId": { "Ref": "jjtechPubRT" }
            }
          },
          "jjtechPubRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "RouteTableId": { "Ref": "jjtechPubRT" },
              "DestinationCidrBlock": { "Ref": "jjtechPubRTrouteDestinationCidrBlock" },
              "GatewayId": { "Ref": "jjtechIGW" }
            }
          },
          "jjtechwebserverSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
              "GroupDescription" : "jjtechwebserverSG",
              "SecurityGroupIngress" : [
                {
                  "IpProtocol" : "tcp",
                  "FromPort" : { "Ref": "jjtechWebServerSGingressFromPortForHTTP" },
                  "ToPort" : { "Ref": "jjtechWebServerSGingressToPortForHTTP" },
                  "CidrIp" : { "Ref": "jjtechWebServerSGsourceIPforHTTP" }},
                {
                  "IpProtocol" : "tcp",
                  "FromPort" : "443",
                  "ToPort" : "443",
                  "CidrIp" : "0.0.0.0/0" }
              ],
              "VpcId" : { "Ref": "jjtechVPC" },
              "Tags" :  [{ "Key": "Name", "Value":  "jjtechwebserverSG" }]
            }
          },
          "jjtechwebserver": {
              "Type": "AWS::EC2::Instance",
              "Properties": {
                  "KeyName": { "Ref": "jjtechKeyPair" },
                  "ImageId": { "Ref": "jjtechAMI" },
                  "InstanceType": { "Ref": "jjtechInstanceType" },
                  "Monitoring": "true",
                  "NetworkInterfaces": [{
                    "AssociatePublicIpAddress": "true",
                    "DeviceIndex": "0",
                    "GroupSet": [{ "Ref" : "jjtechwebserverSG" }],
                    "SubnetId": { "Ref" : "jjtechPubSN" }
              }],
                  "Tags": [
                      {
                          "Key": "Name",
                          "Value": "jjtechwebserver"
                      }
                  ]
          }
        },
        "jjtechAppserverSG" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : "Allow SSH trafic",
            "SecurityGroupIngress" : [
              { "IpProtocol" : "tcp",
                "FromPort" : "22",
                 "ToPort" : "22",
                 "CidrIp" : "0.0.0.0/0"
               }
            ],
            "VpcId" : { "Ref": "jjtechVPC" },
            "Tags" :  [{ "Key": "Nmae", "Value":  "jjtechAppserverSG" } ]
          }
        },
        "jjtechAppserver": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": { "Ref": "jjtechKeyPair" },
                "ImageId": { "Ref": "jjtechAMI" },
                "InstanceType": { "Ref": "jjtechInstanceType" },
                "Monitoring": "false",
                "NetworkInterfaces": [{
                  "AssociatePublicIpAddress": "false",
                  "DeviceIndex": "0",
                  "GroupSet": [{ "Ref" : "jjtechAppserverSG" }],
                  "SubnetId": { "Ref" : "jjtechPrvtSN" }
            }],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "jjtechAppserver"
                    }
                ]
        }
      },
      "gp6bucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "AccessControl": "Private",
          "BucketEncryption": {
           "ServerSideEncryptionConfiguration": [
               {
                   "ServerSideEncryptionByDefault": {
                       "SSEAlgorithm": "AES256"
                   }
               }
           ]
       },
    
          "Tags": [{ "Key": "Name", "Value":  "gp6bucket" }]
        }
      },
      "S3Endpoint": {
          "Type": "AWS::EC2::VPCEndpoint",
        "Properties": {
             "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{
                   "Effect": "Allow",
                   "Principal": "*",
                   "Action": ["s3:GetObject"],
                   "Resource": { "Ref": "gp6bucket" }
                }]
             },
             "ServiceName": {"Fn::Sub": "com.amazonaws.${AWS::Region}.s3"},
             "VpcId": {"Ref": "jjtechVPC"}
          }
       }
        },
        "Outputs": {
        }
    }
    : {
          "Description": "provide subnet cidr",
          "Type": "String"
          
      },
    "Azsnidprivate": {
        "Description": "choose an az for your private subnet",
        "Type": "String"
        

    },
    "Azsnidpublic": {
        "Description": "choose an az for your public subnet",
        "Type": "String"
        

    },
    "wnsnpubliccidr": {
        "Description": "provide subnet cidr",
        "Type": "String"
        
      }


    },
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {
      "wnvpcOK": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref": "wnvpccidr" },
        "Tags": [{ "Key": "Name", "Value":  "wnvpcOK" }]
      }
    },
    "wnvpcOKigw": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{ "Key": "Name", "Value":  "wnvpcOKigw" }]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "wnvpcOK" },
        "InternetGatewayId": { "Ref": "wnvpcOKigw" }
      }
    },
    "wnsnprivate": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Ref": "Azsnidprivate" },
        "VpcId": { "Ref": "wnvpcOK" },
        "CidrBlock": { "Ref": "wnsnprivatecidr" },
        "Tags": [{ "Key": "name", "Value":  "wnsnprivate" }]
      }
    },
    "wnsnpublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Ref": "Azsnidpublic" },
        "VpcId": { "Ref": "wnvpcOK" },
        "CidrBlock": { "Ref": "wnsnpubliccidr" },
        "Tags": [{ "Key": "name", "Value":  "wnsnpublic" }]
      }
    },
    "wnprivateRT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "wnvpcOK" },
        "Tags": [{ "Key": "name", "Value":  "wnprivateRT" }]
      }
    },
    "wnpublicRT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "wnvpcOK" },
        "Tags": [{ "Key": "name", "Value":  "wnpublicRT" }]
      }
    },
    "privateAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "wnsnprivate" },
        "RouteTableId": { "Ref": "wnprivateRT" }
      }
    },
    "pubblicAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "wnsnpublic" },
        "RouteTableId": { "Ref": "wnpublicRT" }
      }
    },
    "routespublicsubnet": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "wnpublicRT" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "wnvpcOKigw" }
      }
    }


    },
    "Outputs": {

    }
}
